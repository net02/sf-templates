# Sonata configuration
sonata_block:
    default_contexts: [cms]
    blocks:
        # Enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts:   [admin]
            
        sonata.block.service.text:
        sonata.block.service.rss:
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
            
sonata_admin:
    title:      Project name
    title_logo: bundles/eonesonatacustomization/images/project_logo.png
    options:
        #title_mode: 'both' #'single_image' or 'single_text' or 'both' (default)
        
    extensions:
        eone.sonatacustomization.translatable.extension:
            implements:
                - Eone\SonataCustomizationBundle\Model\TranslatableInterface
        eone.sonatacustomization.translating.extension:
            implements:
                - Eone\SonataCustomizationBundle\Model\TranslatingInterface
        eone.seo.extension:
            implements:
                - Eone\SeoBundle\Model\SeoAwareInterface

    templates:
        layout:  EoneSonataCustomizationBundle::eone_standard_layout.html.twig
        list:    EoneSonataCustomizationBundle:CRUD:list.html.twig

    security:
        handler: sonata.admin.security.handler.role
        #remove the master/operator (not working "as intended" with roles, & export
        information:
            EDIT: EDIT
            LIST: LIST
            CREATE: CREATE
            VIEW: VIEW
            DELETE: DELETE
            
sonata_doctrine_orm_admin:
    templates:
        form:
            - EoneSonataCustomizationBundle:Form:form_admin_fields.html.twig
            
sonata_core:
    flashmessage:
        error:
            # bootstrap 3
            css_class: danger
        
# FOS User w/ Sonata
fos_user:
    db_driver:      orm
    firewall_name:  admin
    user_class:     Application\Sonata\UserBundle\Entity\User
    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager
    service:
        user_manager: sonata.user.orm.user_manager
    from_email:
        address:        %project.email.address%
        sender_name:    %project.email.sender%
        
sonata_user:
    impersonating:
        route:                sonata_admin_dashboard
    
# Misc
doctrine:
    dbal:
        types:
            json: Sonata\Doctrine\Types\JsonType
            
twig:
    form:
        resources:
            - 'SonataCoreBundle:Form:datepicker.html.twig'
            
# Media
sonata_media:
    default_context: default
    db_driver: doctrine_orm
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.image
            formats:
                standard:   { width: 600 , quality: 80}
        uploads:  
            providers:
                - sonata.media.provider.image
            formats:
                standard:   { width: 600 , quality: 80}
    cdn:
        server:
            path: /uploads/media
    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     false
    # use THUMBNAIL_OUTBOUND for generation (see http://imagine.readthedocs.org/en/v0.2-0/image.html )
#    resizer:
#        simple:
#            mode: outbound
            
ivory_ck_editor:
    configs:
        default:
            filebrowserBrowseRoute: admin_sonata_media_media_ckeditor_browser
            filebrowserImageBrowseRoute: admin_sonata_media_media_ckeditor_browser
            filebrowserImageBrowseRouteParameters:
                provider: sonata.media.provider.image
                context: uploads
            filebrowserUploadRoute: admin_sonata_media_media_ckeditor_upload
            filebrowserUploadRouteParameters:
                provider: sonata.media.provider.file
            filebrowserImageUploadRoute: admin_sonata_media_media_ckeditor_upload
            filebrowserImageUploadRouteParameters:
                provider: sonata.media.provider.image
                context: uploads
